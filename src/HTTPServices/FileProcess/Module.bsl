////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область Лог

Функция ДобавитьЗаписьВЛог()
	Возврат	РегистрыСведений.ИсторияЗапросов.СоздатьЗаписьИстории();
КонецФункции // ДобавитьЗаписьВЛог

Процедура ОбновитьЗаписьВЛоге(Идентификатор, Параметры)
	РегистрыСведений.ИсторияЗапросов.ОбновитьЗапись(Идентификатор, Параметры);
КонецПроцедуры // ОбновитьЗаписьВЛоге

Процедура ЗафиксироватьОшибку(Идентификатор, ТекстОшибки, ОшибкаВыполнения)
	ОшибкаВыполнения = Истина;
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ОписаниеОшибки", ТекстОшибки);
	ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
КонецПроцедуры // ЗафиксироватьОшибку

Процедура ЗафиксироватьПараметрыЗапроса(Идентификатор, ПараметрыЗапроса)
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ПараметрыЗапроса", ПолучитьСтрокуОтвета(ПараметрыЗапроса));
	ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
КонецПроцедуры // ЗафиксироватьПараметрыЗапроса

Процедура ЗафиксироватьМетод(Идентификатор, Метод)
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Метод", Метод);
	ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
КонецПроцедуры // ЗафиксироватьМетод

Процедура ЗафиксироватьВремяИОтвет(Идентификатор, ВремяНачалаОбработки, СтруктураОтвета)
	
	// Двоичные данные не фиксируем	
	СтруктуаДляФиксации = Новый Структура;
	Для Каждого ОписаниеЭлемента Из СтруктураОтвета Цикл
		Если ВРЕГ(ОписаниеЭлемента.Ключ) = ВРЕГ("Data") Тогда
			Продолжить;
		КонецЕсли; // Если ОписаниеЭлемента.Ключ = "Data" Тогда
		СтруктуаДляФиксации.Вставить(ОписаниеЭлемента.Ключ,ОписаниеЭлемента.Значение);
	КонецЦикла; // Для Каждого ОписаниеЭлемента Из СтруктураОтвета Цикл 
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ВремяОбработкиЗапроса", 	ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаОбработки); 
	ПараметрыЗаписи.Вставить("Ответ", 					ПолучитьСтрокуОтвета(СтруктуаДляФиксации)); 
	ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
		
КонецПроцедуры // ЗафиксироватьВремяИОтвет

#КонецОбласти

#Область Сервис

Функция ПолучитьПараметрыЗапроса(Запрос, Идентификатор)
	
	СтруктураПараметров = Неопределено;
	
	Попытка
		СтруктураПараметров = Новый Структура;
		Для Каждого ПараметрЗапроса Из Запрос.ПараметрыЗапроса Цикл
			СтруктураПараметров.Вставить(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла; // Для Каждого ПараметрЗапроса Из Запрос.ПараметрыЗапроса Цикл
	Исключение
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("ОписаниеОшибки", "Не удалось прочитать параметры запроса");
		ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
	КонецПопытки;
	
	Возврат СтруктураПараметров;
	
КонецФункции // ПолучитьПараметрыЗапроса

Функция ПолучитьСтрокуОтвета(СтруктураОтвета)
	// Соберем JSON из структуры ответа
	РезультатJSON 			= Новый ЗаписьJSON;
	РезультатJSON.УстановитьСтроку();
	ЗаписатьJSON(РезультатJSON, СтруктураОтвета);
	СтрокаОтвета 			= РезультатJSON.Закрыть();
	Возврат СтрокаОтвета;
КонецФункции // ПолучитьСтрокуОтвета

Процедура ДополнитьСтруктуру(СтруктураПриемник, СтруктураИсточник)
	
	Для Каждого ОписаниеИсточника Из СтруктураИсточник Цикл
		СтруктураПриемник.Вставить(ОписаниеИсточника.Ключ, ОписаниеИсточника.Значение);	
	КонецЦикла; // Для Каждого ОписаниеИсточника Из СтруктураИсточник Цикл
		
КонецПроцедуры // ДополнитьСтруктуру

#КонецОбласти

#Область ОбработкаЗапроса

#Область ТаблицаКодов

// ResultCode
//	0000 - не удалось обработать запрос
//	0001 - не задан метод
//	0002 - заданный метод не поддерживается
// Метод GetFile
//	0200 - не указаны требуемые параметры
//	0201 - запрос обработан
// Метод PutFile
//	0300 - не указаны требуемые параметры
//	0301 - запрос обработан

#КонецОбласти

Функция GetFile(СтруктураПараметров)
	
	Результат = Новый Структура("ResultCode", "0201");
	
	РезультатОбработки = РаботаСФайламиИнтеграция.GetFile(СтруктураПараметров);
	Если РезультатОбработки.Отказ Тогда 
		Результат.ResultCode = "0200";
	КонецЕсли; // Если РезультатОбработки.Отказ Тогда 
	РезультатОбработки.Удалить("Отказ");
	
	ДополнитьСтруктуру(Результат, РезультатОбработки);
	Возврат Результат;	
	
КонецФункции // GetFile

Функция PutFile(СтруктураПараметров)
	
	Результат = Новый Структура("ResultCode", "0301");
	
	РезультатОбработки = РаботаСФайламиИнтеграция.PutFile(СтруктураПараметров);
	Если РезультатОбработки.Отказ Тогда 
		Результат.ResultCode = "0300";
	КонецЕсли; // Если РезультатОбработки.Отказ Тогда 
	РезультатОбработки.Удалить("Отказ");
	
	ДополнитьСтруктуру(Результат, РезультатОбработки);
	Возврат Результат;	
		
КонецФункции // PutFile

Функция ОбработатьЗапрос(Запрос)
	
	СтруктураОтвета 		= Новый Структура("ResultCode", "0000");
	Идентификатор			= ДобавитьЗаписьВЛог();
	ВремяНачалаОбработки	= ТекущаяУниверсальнаяДатаВМиллисекундах();
	ОшибкаВыполнения		= Ложь;
	
	// Параметры запроса
	СтруктураПараметров = ПолучитьПараметрыЗапроса(Запрос, Идентификатор);
	Если СтруктураПараметров = Неопределено Тогда
		Возврат ПолучитьСтрокуОтвета(СтруктураОтвета);
	КонецЕсли; // Если СтруктураПараметров = Неопределено Тогда
	ЗафиксироватьПараметрыЗапроса(Идентификатор, СтруктураПараметров);
		
	// Тело запроса
	Попытка
		ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	Исключение
		ЗафиксироватьОшибку(Идентификатор, "Не удалось прочитать тело запроса", ОшибкаВыполнения);
		Возврат ПолучитьСтрокуОтвета(СтруктураОтвета);
	КонецПопытки;
	СтруктураПараметров.Вставить("body", ТелоЗапроса);
		
	// Обработка
	Метод = "";
	Попытка
		Метод = Запрос.ПараметрыURL.Получить("MethodName");
		Если Метод = Неопределено Тогда
			СтруктураОтвета.ResultCode = "0001";
		Иначе
			ЗафиксироватьМетод(Идентификатор, Метод);
							
			// Команда GetFile 
			Если ВРег(Метод) = ВРег("GetFile") Тогда
				СтруктураОтвета	= GetFile(СтруктураПараметров);
				
			// Команда PutFile 
			ИначеЕсли ВРег(Метод) = ВРег("PutFile") Тогда
				СтруктураОтвета	= PutFile(СтруктураПараметров);
				
			Иначе
				СтруктураОтвета.ResultCode = "0002";
			КонецЕсли; // Если ВРег(Метод) = ВРег("GetFile") Тогда

		КонецЕсли; // Если Метод = Неопределено Тогда

	Исключение
		ЗафиксироватьОшибку(Идентификатор, "Не удалось обработать запрос", ОшибкаВыполнения);
	КонецПопытки;

	ЗафиксироватьВремяИОтвет(Идентификатор, ВремяНачалаОбработки, СтруктураОтвета);
	Ответ = ПолучитьСтрокуОтвета(СтруктураОтвета);
	
	Возврат Ответ;
КонецФункции // ОбработатьЗапрос

#КонецОбласти

/////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Функция APIV1Method(Запрос)
	Ответ 					= Новый HTTPСервисОтвет(200);
	ДанныеДляОтвета			= ОбработатьЗапрос(Запрос);
	
	Если ТипЗнч(ДанныеДляОтвета) = Тип("Строка") Тогда
		Ответ.УстановитьТелоИзСтроки(ДанныеДляОтвета);					
		Ответ.Заголовки.Вставить("Content-Type","text/json; charset=utf-8");
	КонецЕсли; // Если ТипЗнч(ДанныеДляОтвета) = Тип("Строка") Тогда	
	
	Возврат Ответ;
КонецФункции // APIV1Method

