//////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция НайтиПоПользователю(Пользователь) Экспорт
	
	Результат 		= Справочники.КлиентыХранилища.ПустаяСсылка();
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
						|	КлиентыХранилища.Ссылка
						|ИЗ
						|	Справочник.КлиентыХранилища КАК КлиентыХранилища
						|ГДЕ
						|	КлиентыХранилища.Пользователь = &Пользователь
						|	И НЕ КлиентыХранилища.ПометкаУдаления";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);

	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Результат = Выборка.Ссылка;
	КонецЕсли; // Если Не РезультатЗапроса.Пустой() Тогда
	
	Возврат Результат;
		
КонецФункции // НайтиПоПользователю

Функция ПолучитьКлиента(Пользователь, НаименованиеКлиента) Экспорт
	
	Результат = НайтиПоПользователю(Пользователь);
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		НовыйКлиент = Справочники.КлиентыХранилища.СоздатьЭлемент();
		НовыйКлиент.Наименование 	= НаименованиеКлиента;
		НовыйКлиент.Пользователь 	= Пользователь;
		
		Попытка
			НовыйКлиент.Записать();
			Результат = НовыйКлиент.Ссылка;
		Исключение
			ТекстОшибки = СтрШаблон("При создании клиента %1 возникла ошибка %2", НаименованиеКлиента, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации("СозданиеНовогоКлиента", УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
		КонецПопытки;
				 	
	КонецЕсли; // Если Не ЗначениеЗаполнено(Результат) Тогда
	
	Возврат Результат;
		
КонецФункции // ПолучитьКлиента
